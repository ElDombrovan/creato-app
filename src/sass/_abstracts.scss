// variables, mixins, functions, placeholders

/** --- VARIABLES --- **/

$color__white: "FFFFFF";
$color__black--primary: "#000000";
$color__black--secondary: "#333333";
$color__grey--primary: "#BDBDBD";

$font__secondary: 'Gothic A1', sans-serif;

$font-size__small: 12px;
$font-size__medium: $font-size__small * 2;

$line-height__small: $font-size__small + 3px;
$line-height__medium: $line-height__small * 2;

$breakpoints: (
	xs: 512px,
	sm: 768px,
	md: 896px,
	lg: 1152px,
	xl: 1280px
);

/** --- VARIABLES END--- **/
/** --- MIXINS --- **/

@mixin button ($btn__font-size, $btn__line-height, $btn__spacing) {
    font-size: $btn__font-size;
    line-height: $btn__line-height;
    letter-spacing: $btn__spacing;
}

@mixin text__styles--primary ($font-style, $font-weight, $font-size, $line-height, $color) {
    font-style: $font-style;
    font-weight: $font-weight;
    font-size: $font-size;
    line-height: $line-height;
    color: $color;
}

@mixin text__styles--secondary ($spacing, $text-transform) {
    letter-spacing: $spacing;
    text-transform: $text-transform;
}

// usage - @include button($font-size__small, $line-height__small, 0.2 );
// usage - @include text__styles--primary(normal, normal, $font-size__small, $line-height__small, $color__black--primary);


@mixin grid ($grid__columns, $grid__rows) {
    display: grid;
    grid-auto-flow: dense;
    grid-template-columns: repeat($grid__columns, 1fr);
    grid-template-rows: repeat($grid__rows, 1fr);
    grid-gap: 0px;
}

// usage - @include grid(12, 3); // 12 columns, 10 rows


@mixin flexbox {
    display:-webkit-box;
    display:-moz-box;
    display:-ms-flexbox;
    display:-webkit-flex;
    display:flex;
}

// usage - @include flexbox();

@mixin flex-direction($direction) {
    @if $direction == column {
        -webkit-flex-direction:vertical;
        -moz-flex-direction:vertical;
        -ms-flex-direction:column;
        -webkit-flex-direction:column;
        flex-direction:column;
    }
    @else {
        -webkit-flex-direction:horizontal;
        -moz-flex-direction:horizontal;
        -ms-flex-direction:row;
        -webkit-flex-direction:row;
        flex-direction:row;
    }
 }

 //usage - @include flex-direction(column);

@mixin breakpoint( $breakpoint ) {
    @if map-has-key( $breakpoints, $breakpoint ) {
        @media ( min-width: #{ map-get( $breakpoints, $breakpoint ) } ) {
            @content;
        }
    } @else if type_of( $breakpoint ) == number and unit( $breakpoint ) == px or unit( $breakpoint ) == em or unit( $breakpoint ) == rem {
        @media (min-width: $breakpoint ) {
            @content;
        }
    } @else {
        @warn "No value could be retrieved from `#{$breakpoint}`. "
               + "It is either not defined in the `$breakpoints` map, or it is an invalid number of px, em, or rem.";
    }
}

// usage - @include breakpoint(xs) { font-size: 2.2em; }

@font-face {
    font-family: 'Mont';
    src: url('../fonts/Mont-Regular.eot');
    src: local('Mont Regular'), local('Mont-Regular'),
        url('../fonts/Mont-Regular.eot?#iefix') format('embedded-opentype'),
        url('../fonts/Mont-Regular.woff2') format('woff2'),
        url('../fonts/Mont-Regular.woff') format('woff'),
        url('../fonts/Mont-Regular.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

/** --- MIXINS END --- **/